
当前是第 1 次执行

.
当前是第 2 次执行

.
当前是第 3 次执行

.
当前是第 4 次执行

.
当前是第 5 次执行

.
当前是第 6 次执行

.
当前是第 7 次执行

.
当前是第 8 次执行

.
当前是第 9 次执行

.
当前是第 10 次执行

.
当前是第 11 次执行

.
当前是第 12 次执行

.
当前是第 13 次执行

.
当前是第 14 次执行

.
当前是第 15 次执行

.
当前是第 16 次执行

.
当前是第 17 次执行

.
当前是第 18 次执行

.
当前是第 19 次执行

.
当前是第 20 次执行

.
当前是第 21 次执行

.
当前是第 22 次执行

.
当前是第 23 次执行

.
当前是第 24 次执行

.
当前是第 25 次执行

.
当前是第 26 次执行

.
当前是第 27 次执行

.
当前是第 28 次执行

.
当前是第 29 次执行

.
当前是第 30 次执行

.
当前是第 31 次执行

.
当前是第 32 次执行

.
当前是第 33 次执行

.
当前是第 34 次执行

.
当前是第 35 次执行

.
当前是第 36 次执行

.
当前是第 37 次执行

.
当前是第 38 次执行

.
当前是第 39 次执行

.
当前是第 40 次执行

.
当前是第 41 次执行

.
当前是第 42 次执行

.
当前是第 43 次执行

.
当前是第 44 次执行

.
当前是第 45 次执行

.
当前是第 46 次执行

.
当前是第 47 次执行

.
当前是第 48 次执行

.
当前是第 49 次执行

.
当前是第 50 次执行

.
当前是第 51 次执行

.
当前是第 52 次执行

.
当前是第 53 次执行

.
当前是第 54 次执行

.
当前是第 55 次执行

.
当前是第 56 次执行

.
当前是第 57 次执行

.
当前是第 58 次执行

.
当前是第 59 次执行

.
当前是第 60 次执行

.
当前是第 61 次执行

.
当前是第 62 次执行

.
当前是第 63 次执行

.
当前是第 64 次执行

.
当前是第 65 次执行

.
当前是第 66 次执行

.
当前是第 67 次执行

.
当前是第 68 次执行

.
当前是第 69 次执行

.
当前是第 70 次执行

.
当前是第 71 次执行

.
当前是第 72 次执行

.
当前是第 73 次执行

.
当前是第 74 次执行

.
当前是第 75 次执行

.
当前是第 76 次执行

.
当前是第 77 次执行

.
当前是第 78 次执行

.
当前是第 79 次执行

.
当前是第 80 次执行

.
当前是第 81 次执行

.
当前是第 82 次执行

.
当前是第 83 次执行

.
当前是第 84 次执行

.
当前是第 85 次执行

.
当前是第 86 次执行

.
当前是第 87 次执行

.
当前是第 88 次执行

.
当前是第 89 次执行

.
当前是第 90 次执行

.
当前是第 91 次执行

.
当前是第 92 次执行

.
当前是第 93 次执行

.
当前是第 94 次执行

.
当前是第 95 次执行

.
当前是第 96 次执行

.
当前是第 97 次执行

.
当前是第 98 次执行

.
当前是第 99 次执行

.
当前是第 100 次执行

.
当前是第 101 次执行

.
当前是第 102 次执行

.
当前是第 103 次执行

.
当前是第 104 次执行

.
当前是第 105 次执行

.
当前是第 106 次执行

.
当前是第 107 次执行

.
当前是第 108 次执行

.
当前是第 109 次执行

.
当前是第 110 次执行

.
当前是第 111 次执行

.
当前是第 112 次执行

.
当前是第 113 次执行

.
当前是第 114 次执行

.
当前是第 115 次执行

.
当前是第 116 次执行

.
当前是第 117 次执行

.
当前是第 118 次执行

.
当前是第 119 次执行

.
当前是第 120 次执行

.
当前是第 121 次执行

.
当前是第 122 次执行

.
当前是第 123 次执行

.
当前是第 124 次执行

.
当前是第 125 次执行

.
当前是第 126 次执行

.
当前是第 127 次执行

.
当前是第 128 次执行

.
当前是第 129 次执行

.
当前是第 130 次执行

.
当前是第 131 次执行

.
当前是第 132 次执行

.
当前是第 133 次执行

.
当前是第 134 次执行

.
当前是第 135 次执行

.
当前是第 136 次执行

.
当前是第 137 次执行

.
当前是第 138 次执行

.
当前是第 139 次执行

.
当前是第 140 次执行

.
当前是第 141 次执行

.
当前是第 142 次执行

.
当前是第 143 次执行

.
当前是第 144 次执行

.
当前是第 145 次执行

.
当前是第 146 次执行

.
当前是第 147 次执行

.
当前是第 148 次执行

.
当前是第 149 次执行

.
当前是第 150 次执行

.
当前是第 151 次执行

.
当前是第 152 次执行

.
当前是第 153 次执行

.
当前是第 154 次执行

.
当前是第 155 次执行

.
当前是第 156 次执行

.
当前是第 157 次执行

.
当前是第 158 次执行

.
当前是第 159 次执行

.
当前是第 160 次执行

.
当前是第 161 次执行

.
当前是第 162 次执行

.
当前是第 163 次执行

.
当前是第 164 次执行

.
当前是第 165 次执行

.
当前是第 166 次执行

.
当前是第 167 次执行

.
当前是第 168 次执行

.
当前是第 169 次执行

.
当前是第 170 次执行

.
当前是第 171 次执行

.
当前是第 172 次执行

.
当前是第 173 次执行

这是error_message： 没有回到启动页面
assert None is not None
 +  where None = is_element_present(<appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>, 'id', value='com.glazero.android:id/splash_create_account')
 +    where 'id' = AppiumBy.ID
F
当前是第 174 次执行

.
当前是第 175 次执行

.
当前是第 176 次执行

.
当前是第 177 次执行

.
当前是第 178 次执行

.
当前是第 179 次执行

.
当前是第 180 次执行

.
当前是第 181 次执行

.
当前是第 182 次执行

.
当前是第 183 次执行

.
当前是第 184 次执行

.
当前是第 185 次执行

.
当前是第 186 次执行

.
当前是第 187 次执行

.
当前是第 188 次执行

.
当前是第 189 次执行

.
当前是第 190 次执行

.
当前是第 191 次执行

.
当前是第 192 次执行

.
当前是第 193 次执行

.
当前是第 194 次执行

.
当前是第 195 次执行

.
当前是第 196 次执行

.
当前是第 197 次执行

.
当前是第 198 次执行

.
当前是第 199 次执行

.
当前是第 200 次执行

.
当前是第 201 次执行

.
当前是第 202 次执行

.
当前是第 203 次执行

.
当前是第 204 次执行

.
当前是第 205 次执行

.
当前是第 206 次执行

.
当前是第 207 次执行

.
当前是第 208 次执行

.
当前是第 209 次执行

.
当前是第 210 次执行

.
当前是第 211 次执行

.
当前是第 212 次执行

.
当前是第 213 次执行

.
当前是第 214 次执行

.
当前是第 215 次执行

.
当前是第 216 次执行

.
当前是第 217 次执行

.
当前是第 218 次执行

.
当前是第 219 次执行

.
当前是第 220 次执行

.
当前是第 221 次执行

.
当前是第 222 次执行

.
当前是第 223 次执行

.
当前是第 224 次执行

.
当前是第 225 次执行

.
当前是第 226 次执行

.
当前是第 227 次执行

.
当前是第 228 次执行

.
当前是第 229 次执行

.
当前是第 230 次执行

.
当前是第 231 次执行

.
当前是第 232 次执行

.
当前是第 233 次执行

.
当前是第 234 次执行

.
当前是第 235 次执行

.
当前是第 236 次执行

.
当前是第 237 次执行

.
当前是第 238 次执行

.
当前是第 239 次执行

.
当前是第 240 次执行

.
当前是第 241 次执行

.
当前是第 242 次执行

.
当前是第 243 次执行

.
当前是第 244 次执行

.
当前是第 245 次执行

.
当前是第 246 次执行

.
当前是第 247 次执行

.
当前是第 248 次执行

.
当前是第 249 次执行

.
当前是第 250 次执行

.
当前是第 251 次执行

.
当前是第 252 次执行

.
当前是第 253 次执行

.
当前是第 254 次执行

.
当前是第 255 次执行

.
当前是第 256 次执行

.
当前是第 257 次执行

.
当前是第 258 次执行

.
当前是第 259 次执行

.
当前是第 260 次执行

.
当前是第 261 次执行

.
当前是第 262 次执行

.
当前是第 263 次执行

.
当前是第 264 次执行

.
当前是第 265 次执行

.
当前是第 266 次执行

.
当前是第 267 次执行

.
当前是第 268 次执行

.
当前是第 269 次执行

.
当前是第 270 次执行

.
当前是第 271 次执行

.
当前是第 272 次执行

.
当前是第 273 次执行

.
当前是第 274 次执行

.
当前是第 275 次执行

.
当前是第 276 次执行

.
当前是第 277 次执行

.
当前是第 278 次执行

.
当前是第 279 次执行

.
当前是第 280 次执行

.
当前是第 281 次执行

.
当前是第 282 次执行

.
当前是第 283 次执行

.
当前是第 284 次执行

.
当前是第 285 次执行

.
当前是第 286 次执行

.
当前是第 287 次执行

.
当前是第 288 次执行

.
当前是第 289 次执行

.
当前是第 290 次执行

.
当前是第 291 次执行

.
当前是第 292 次执行

.
当前是第 293 次执行

.
当前是第 294 次执行

.
当前是第 295 次执行

.
当前是第 296 次执行

.
当前是第 297 次执行

.
当前是第 298 次执行

.
当前是第 299 次执行

.
当前是第 300 次执行

.
当前是第 301 次执行

.
当前是第 302 次执行

.
当前是第 303 次执行

.
当前是第 304 次执行

.
当前是第 305 次执行

.
当前是第 306 次执行

.
当前是第 307 次执行

.
当前是第 308 次执行

.
当前是第 309 次执行

.
当前是第 310 次执行

.
当前是第 311 次执行

.
当前是第 312 次执行

.
当前是第 313 次执行

.
当前是第 314 次执行

.
当前是第 315 次执行

.
当前是第 316 次执行

.
当前是第 317 次执行

.
当前是第 318 次执行

.
当前是第 319 次执行

.
当前是第 320 次执行

.
当前是第 321 次执行

.
当前是第 322 次执行

.
当前是第 323 次执行

.
当前是第 324 次执行

.
当前是第 325 次执行

.
当前是第 326 次执行

.
当前是第 327 次执行

.
当前是第 328 次执行

.
当前是第 329 次执行

.
当前是第 330 次执行

.
当前是第 331 次执行

.
当前是第 332 次执行

.
当前是第 333 次执行

.
当前是第 334 次执行

.
当前是第 335 次执行

.
当前是第 336 次执行

.
当前是第 337 次执行

.
当前是第 338 次执行

.
当前是第 339 次执行

.
当前是第 340 次执行

.
当前是第 341 次执行

.
当前是第 342 次执行

.
当前是第 343 次执行

这是error_message： 没有回到启动页面
assert None is not None
 +  where None = is_element_present(<appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>, 'id', value='com.glazero.android:id/splash_create_account')
 +    where 'id' = AppiumBy.ID
F
当前是第 344 次执行

.
当前是第 345 次执行

.
当前是第 346 次执行

.
当前是第 347 次执行

.
当前是第 348 次执行

.
当前是第 349 次执行

.
当前是第 350 次执行

.
当前是第 351 次执行

.
当前是第 352 次执行

.
当前是第 353 次执行

.
当前是第 354 次执行

.
当前是第 355 次执行

.
当前是第 356 次执行

.
当前是第 357 次执行

.
当前是第 358 次执行

.
当前是第 359 次执行

.
当前是第 360 次执行

.
当前是第 361 次执行

.
当前是第 362 次执行

.
当前是第 363 次执行

.
当前是第 364 次执行

.
当前是第 365 次执行

.
当前是第 366 次执行

.
当前是第 367 次执行

.
当前是第 368 次执行

.
当前是第 369 次执行

.
当前是第 370 次执行

.
当前是第 371 次执行

.
当前是第 372 次执行

.
当前是第 373 次执行

.
当前是第 374 次执行

.
当前是第 375 次执行

这是error_message： assert 'com.glazero.module.account.login.LoginActivity' in ('.main.MainActivity', '.account.login.LoginActivity')
 +  where 'com.glazero.module.account.login.LoginActivity' = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>.current_activity
F
当前是第 376 次执行

.
当前是第 377 次执行

.
当前是第 378 次执行

.
当前是第 379 次执行

.
当前是第 380 次执行

.
当前是第 381 次执行

.
当前是第 382 次执行

.
当前是第 383 次执行

.
当前是第 384 次执行

.
当前是第 385 次执行

.
当前是第 386 次执行

.
当前是第 387 次执行

.
当前是第 388 次执行

.
当前是第 389 次执行

.
当前是第 390 次执行

.
当前是第 391 次执行

.
当前是第 392 次执行

.
当前是第 393 次执行

.
当前是第 394 次执行

.
当前是第 395 次执行

.
当前是第 396 次执行

.
当前是第 397 次执行

.
当前是第 398 次执行

.
当前是第 399 次执行

.
当前是第 400 次执行

.
当前是第 401 次执行

.
当前是第 402 次执行

.
当前是第 403 次执行

.
当前是第 404 次执行

.
当前是第 405 次执行

.
当前是第 406 次执行

.
当前是第 407 次执行

.
当前是第 408 次执行

.
当前是第 409 次执行

.
当前是第 410 次执行

.
当前是第 411 次执行

.
当前是第 412 次执行

.
当前是第 413 次执行

.
当前是第 414 次执行

.
当前是第 415 次执行

.
当前是第 416 次执行

.
当前是第 417 次执行

.
当前是第 418 次执行

.
当前是第 419 次执行

.
当前是第 420 次执行

.
当前是第 421 次执行

.
当前是第 422 次执行

.
当前是第 423 次执行

.
当前是第 424 次执行

.
当前是第 425 次执行

.
当前是第 426 次执行

.
当前是第 427 次执行

.
当前是第 428 次执行

.
当前是第 429 次执行

.
当前是第 430 次执行

.
当前是第 431 次执行

.
当前是第 432 次执行

.
当前是第 433 次执行

.
当前是第 434 次执行

.
当前是第 435 次执行

.
当前是第 436 次执行

.
当前是第 437 次执行

.
当前是第 438 次执行

.
当前是第 439 次执行

.
当前是第 440 次执行

.
当前是第 441 次执行

.
当前是第 442 次执行

.
当前是第 443 次执行

.
当前是第 444 次执行

.
当前是第 445 次执行

.
当前是第 446 次执行

.
当前是第 447 次执行

.
当前是第 448 次执行

.
当前是第 449 次执行

.
当前是第 450 次执行

.
当前是第 451 次执行

.
当前是第 452 次执行

.
当前是第 453 次执行

.
当前是第 454 次执行

.
当前是第 455 次执行

.
当前是第 456 次执行

.
当前是第 457 次执行

.
当前是第 458 次执行

.
当前是第 459 次执行

.
当前是第 460 次执行

.
当前是第 461 次执行

.
当前是第 462 次执行

.
当前是第 463 次执行

.
当前是第 464 次执行

.
当前是第 465 次执行

.
当前是第 466 次执行

.
当前是第 467 次执行

.
当前是第 468 次执行

.
当前是第 469 次执行

.
当前是第 470 次执行

.
当前是第 471 次执行

.
当前是第 472 次执行

.
当前是第 473 次执行

.
当前是第 474 次执行

.
当前是第 475 次执行

.
当前是第 476 次执行

.
当前是第 477 次执行

.
当前是第 478 次执行

.
当前是第 479 次执行

.
当前是第 480 次执行

.
当前是第 481 次执行

.
当前是第 482 次执行

.
当前是第 483 次执行

.
当前是第 484 次执行

.
当前是第 485 次执行

.
当前是第 486 次执行

.
当前是第 487 次执行

.
当前是第 488 次执行

.
当前是第 489 次执行

.
当前是第 490 次执行

.
当前是第 491 次执行

.
当前是第 492 次执行

.
当前是第 493 次执行

.
当前是第 494 次执行

.
当前是第 495 次执行

.
当前是第 496 次执行

.
当前是第 497 次执行

.
当前是第 498 次执行

.
当前是第 499 次执行

.
当前是第 500 次执行

.
当前是第 501 次执行

.
当前是第 502 次执行

.
当前是第 503 次执行

.
当前是第 504 次执行

.
当前是第 505 次执行

.
当前是第 506 次执行

.
当前是第 507 次执行

.
当前是第 508 次执行

.
当前是第 509 次执行

.
当前是第 510 次执行

.
当前是第 511 次执行

.
当前是第 512 次执行

.
当前是第 513 次执行

.
当前是第 514 次执行

.
当前是第 515 次执行

.
当前是第 516 次执行

.
当前是第 517 次执行

.
当前是第 518 次执行

.
当前是第 519 次执行

.
当前是第 520 次执行

.
当前是第 521 次执行

.
当前是第 522 次执行

.
当前是第 523 次执行

.
当前是第 524 次执行

.
当前是第 525 次执行

.
当前是第 526 次执行

.
当前是第 527 次执行

.
当前是第 528 次执行

.
当前是第 529 次执行

.
当前是第 530 次执行

.
当前是第 531 次执行

.
当前是第 532 次执行

.
当前是第 533 次执行

.
当前是第 534 次执行

.
当前是第 535 次执行

.
当前是第 536 次执行

.
当前是第 537 次执行

.
当前是第 538 次执行

.
当前是第 539 次执行

.
当前是第 540 次执行

.
当前是第 541 次执行

.
当前是第 542 次执行

.
当前是第 543 次执行

.
当前是第 544 次执行

.
当前是第 545 次执行

.
当前是第 546 次执行

.
当前是第 547 次执行

.
当前是第 548 次执行

.
当前是第 549 次执行

.
当前是第 550 次执行

.
当前是第 551 次执行

.
当前是第 552 次执行

这是error_message： 没有回到启动页面
assert None is not None
 +  where None = is_element_present(<appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>, 'id', value='com.glazero.android:id/splash_create_account')
 +    where 'id' = AppiumBy.ID
F
当前是第 553 次执行

.
当前是第 554 次执行

.
当前是第 555 次执行

.
当前是第 556 次执行

.
当前是第 557 次执行

.
当前是第 558 次执行

.
当前是第 559 次执行

.
当前是第 560 次执行

.
当前是第 561 次执行

.
当前是第 562 次执行

.
当前是第 563 次执行

.
当前是第 564 次执行

.
当前是第 565 次执行

.
当前是第 566 次执行

.
当前是第 567 次执行

.
当前是第 568 次执行

.
当前是第 569 次执行

.
当前是第 570 次执行

.
当前是第 571 次执行

.
当前是第 572 次执行

.
当前是第 573 次执行

.
当前是第 574 次执行

.
当前是第 575 次执行

.
当前是第 576 次执行

.
当前是第 577 次执行

.
当前是第 578 次执行

.
当前是第 579 次执行

.
当前是第 580 次执行

.
当前是第 581 次执行

.
当前是第 582 次执行

.
当前是第 583 次执行

.
当前是第 584 次执行

.
当前是第 585 次执行

.
当前是第 586 次执行

.
当前是第 587 次执行

.
当前是第 588 次执行

.
当前是第 589 次执行

.
当前是第 590 次执行

.
当前是第 591 次执行

.
当前是第 592 次执行

.
当前是第 593 次执行

.
当前是第 594 次执行

.
当前是第 595 次执行

.
当前是第 596 次执行

.
当前是第 597 次执行

.
当前是第 598 次执行

.
当前是第 599 次执行

.
当前是第 600 次执行

.
=================================== FAILURES ===================================
________________________ test_login_change_region[us57] ________________________

appium_service = <appium.webdriver.appium_service.AppiumService object at 0x105237290>
android_driver = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>
init_logout_android = None
login_data = {'assert_region_name': 'change pid', 'country_predicate': 'name == "   美国  +1" AND visible == true', 'email': '1499405887@qq.com', 'password': 'Qwe111111', ...}

    @allure.story('输入用户名和密码登录aosu app')
    @pytest.mark.android
    @pytest.mark.parametrize("login_data", ['cn_test', 'us', 'eu'] * 200, indirect=True)
    def test_login_change_region(appium_service, android_driver, init_logout_android, login_data):
        master = android_driver
    
        # 获取登录数据
        # login_data = LOGIN_DATA.get('cn_test').copy()
    
        # 点击 aosu 图标7次，在地区列表中出现中国
        x = master.get_window_size()['width']
        y = master.get_window_size()['height']
    
        xx = x//2
        yy = y//2
    
        for ii in range(1, 8):
            master.tap([(xx, yy)], 500)
            master.implicitly_wait(1)
    
        with allure.step('step1：在splash页，点击 登录 按钮'):
            master.find_element(AppiumBy.ID, "com.glazero.android:id/splash_login").click()
            master.implicitly_wait(10)
    
            # 断言进入了登录页面
            assert master.find_element(AppiumBy.ID, "com.glazero.android:id/tv_title").text == "登录"
    
        with allure.step('step2：输入用户名'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].send_keys(login_data['email'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step3: 输入密码'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].send_keys(login_data['password'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step4：选择地区'):
            region_country = login_data['region_name'].strip().split()[0]
            # 如果默认是指定的地区，那么就直接点击登录
            if master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].text[:2] == region_country:
                time.sleep(1)
            else:
                # 如果默认不是指定的地区，那么就在地区列表中选择
                # 在回归用例中不能直接点击登录按钮，要走一遍地区选择过程
                master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].click()
                master.implicitly_wait(10)
    
                region_search_for_android(master, login_data['region_name'])
    
                time.sleep(1)
    
        with allure.step('step5：点击 登录 按钮'):
            # 点击登录按钮之前截图
            ts = time.strftime("%Y-%m-%d_%H-%M-%S", time.localtime())
            master.save_screenshot('./report/login_and_logout/login_%s.png' % ts)
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/login_%s.png" % ts, name="登录页面",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            master.implicitly_wait(10)
    
        with (allure.step('step6: 登录成功')):
            # 点击登录按钮之后即进入首页后截图截图
            time.sleep(5)
            master.save_screenshot('./report/login_and_logout/homePage.png')
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/homePage.png", name="登陆成功 进入首页",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            # 登录后进入首页，有可能会弹出低电量的弹窗，发现后点击“知道了”关闭弹窗
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/btn_dialog_confirm") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/btn_dialog_confirm").click()
            #     master.implicitly_wait(10)
    
            # 出现固件升级弹窗后，点击 取消/忽略此版本，多个弹窗的话，点击多次
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/inner_layout_ota_prompt") is True:
            #     master.find_elements(AppiumBy.ID, "com.glazero.android:id/button")[1].click()
            #     master.implicitly_wait(10)
    
            # 如果出现智能提醒，点击：知道了
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/smart_warn_iv_top_icon") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            #     master.implicitly_wait(10)
    
            # 如果出现了新人礼的弹窗，点击关闭按钮
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/img_ad") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/iv_close").click()
            #     master.implicitly_wait(10)
    
            """
            if gz_public.isElementPresent(driver=master, by="id",
                                          value="com.glazero.android:id/inner_layout_ota_prompt") is True:
                master.find_element_by_xpath('//android.widget.Button[@text="忽略此版本"]').click()
                master.implicitly_wait(10)
            """
            # time.sleep(3)
    
            # 关闭云存广告弹窗
            (el := is_element_present(master, AppiumBy.ID, ANDROID_AD_CLOSE_REID)) and el.click()
            logger.info("进入首页后开始断言：导航按钮、+、设备、云存储、在线客服")
    
            # 断言首页元素
            assert master.current_activity in (".main.MainActivity", ".account.login.LoginActivity")
            assert is_element_present(master, AppiumBy.ID, ANDROID_MENU_REID) is not None, \
                "首页左上角的导航按钮没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_ADD_REID) is not None, \
                "首页右上角的+号没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_DEVICES_REID) is not None, \
                "首页底部 ‘设备’标签 没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_CLOUD_REID) is not None, \
                "首页底部 ‘云存储’标签 没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_ONLINE_SUPPORT_REID) is not None, \
                "首页底部 ‘在线客服’标签 没有出现"
    
            # 首次登录设备列表加载较慢
            assert element_until_appears(master, AppiumBy.ID, 'com.glazero.android:id/device_name', 5).text == login_data['assert_region_name'], "大区没有出现"
            logger.info("进入首页成功，对应大区在首页检测到了")
    
>       test_logout(appium_service, android_driver)

test_login_and_logout.py:325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

appium_service = <appium.webdriver.appium_service.AppiumService object at 0x105237290>
android_driver = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>

    @pytest.mark.logout
    @pytest.mark.android
    def test_logout(appium_service, android_driver):
        driver = android_driver
    
        with allure.step('step1: 点击左上角 导航 按钮'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_MENU_REID)
            el.click()
    
            driver.implicitly_wait(5)
    
            assert is_element_present(driver, AppiumBy.ID, ANDROID_PERSONAL_ICON_REID) is not None
            logger.info("logout: 点击左上角 导航 按钮")
    
        with allure.step('step2: 点击 退出登录'):
            swipe_once_in_menu(driver)
            el = driver.find_element(by=AppiumBy.ANDROID_UIAUTOMATOR,
                                     value='new UiSelector().resourceId("com.glazero.android:id/tv_menu_item_name").text("退出登录")')
            # el = driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
            #                          f'new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().text({ANDROID_LOGOUT_TEXT}))')
            # sleep(1)
            el.click()
    
            driver.implicitly_wait(5)
            logger.info("logout: 点击 退出登录")
    
        with allure.step('step3: 点击 确定'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_CONFIRM_REID)
            el.click()
    
            logger.info("logout: 点击确定")
    
            # 点击确定后app会清理堆栈，之后再切换到登录页面
            sleep(2)
    
            # 断言回到登录页面
            assert driver.find_element(by=AppiumBy.ID, value=ANDROID_LOGIN_REID).text == '登录'
            logger.info("logout: 回到了登录页面")
    
        with allure.step('step4: 点击右上角的 X'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_LOGIN_CLOSE_REID)
            el.click()
    
>           assert is_element_present(driver, AppiumBy.ID, value=ANDROID_SPLASH_REID) is not None, \
                "没有回到启动页面"
E           AssertionError: 没有回到启动页面
E           assert None is not None
E            +  where None = is_element_present(<appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>, 'id', value='com.glazero.android:id/splash_create_account')
E            +    where 'id' = AppiumBy.ID

test_login_and_logout.py:371: AssertionError
------------------------------ Captured log call -------------------------------
2025-01-08 22:40:19 INFO conftest pytest_runtest_call 172  当前是第 173 次执行
2025-01-08 22:40:32 INFO gz_public region_search_for_android 245  gz_public::region_search_for_android国家名字是：美国
2025-01-08 22:40:34 INFO gz_public region_search_for_android 254  gz_public::region_search_for_android country_code是：美国  +1
2025-01-08 22:40:58 INFO test_login_and_logout test_login_change_region 306  进入首页后开始断言：导航按钮、+、设备、云存储、在线客服
2025-01-08 22:40:58 INFO test_login_and_logout test_login_change_region 323  进入首页成功，对应大区在首页检测到了
2025-01-08 22:41:00 INFO test_login_and_logout test_logout 340  logout: 点击左上角 导航 按钮
2025-01-08 22:41:03 INFO test_login_and_logout test_logout 352  logout: 点击 退出登录
2025-01-08 22:41:04 INFO test_login_and_logout test_logout 358  logout: 点击确定
2025-01-08 22:41:06 INFO test_login_and_logout test_logout 365  logout: 回到了登录页面
_____________________ test_login_change_region[cn_test114] _____________________

appium_service = <appium.webdriver.appium_service.AppiumService object at 0x105237290>
android_driver = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>
init_logout_android = None
login_data = {'assert_region_name': '中国区', 'country_predicate': 'name == "   中国  +86" AND visible == true', 'email': '1499405887@qq.com', 'password': 'Qwe222222', ...}

    @allure.story('输入用户名和密码登录aosu app')
    @pytest.mark.android
    @pytest.mark.parametrize("login_data", ['cn_test', 'us', 'eu'] * 200, indirect=True)
    def test_login_change_region(appium_service, android_driver, init_logout_android, login_data):
        master = android_driver
    
        # 获取登录数据
        # login_data = LOGIN_DATA.get('cn_test').copy()
    
        # 点击 aosu 图标7次，在地区列表中出现中国
        x = master.get_window_size()['width']
        y = master.get_window_size()['height']
    
        xx = x//2
        yy = y//2
    
        for ii in range(1, 8):
            master.tap([(xx, yy)], 500)
            master.implicitly_wait(1)
    
        with allure.step('step1：在splash页，点击 登录 按钮'):
            master.find_element(AppiumBy.ID, "com.glazero.android:id/splash_login").click()
            master.implicitly_wait(10)
    
            # 断言进入了登录页面
            assert master.find_element(AppiumBy.ID, "com.glazero.android:id/tv_title").text == "登录"
    
        with allure.step('step2：输入用户名'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].send_keys(login_data['email'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step3: 输入密码'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].send_keys(login_data['password'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step4：选择地区'):
            region_country = login_data['region_name'].strip().split()[0]
            # 如果默认是指定的地区，那么就直接点击登录
            if master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].text[:2] == region_country:
                time.sleep(1)
            else:
                # 如果默认不是指定的地区，那么就在地区列表中选择
                # 在回归用例中不能直接点击登录按钮，要走一遍地区选择过程
                master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].click()
                master.implicitly_wait(10)
    
                region_search_for_android(master, login_data['region_name'])
    
                time.sleep(1)
    
        with allure.step('step5：点击 登录 按钮'):
            # 点击登录按钮之前截图
            ts = time.strftime("%Y-%m-%d_%H-%M-%S", time.localtime())
            master.save_screenshot('./report/login_and_logout/login_%s.png' % ts)
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/login_%s.png" % ts, name="登录页面",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            master.implicitly_wait(10)
    
        with (allure.step('step6: 登录成功')):
            # 点击登录按钮之后即进入首页后截图截图
            time.sleep(5)
            master.save_screenshot('./report/login_and_logout/homePage.png')
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/homePage.png", name="登陆成功 进入首页",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            # 登录后进入首页，有可能会弹出低电量的弹窗，发现后点击“知道了”关闭弹窗
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/btn_dialog_confirm") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/btn_dialog_confirm").click()
            #     master.implicitly_wait(10)
    
            # 出现固件升级弹窗后，点击 取消/忽略此版本，多个弹窗的话，点击多次
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/inner_layout_ota_prompt") is True:
            #     master.find_elements(AppiumBy.ID, "com.glazero.android:id/button")[1].click()
            #     master.implicitly_wait(10)
    
            # 如果出现智能提醒，点击：知道了
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/smart_warn_iv_top_icon") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            #     master.implicitly_wait(10)
    
            # 如果出现了新人礼的弹窗，点击关闭按钮
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/img_ad") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/iv_close").click()
            #     master.implicitly_wait(10)
    
            """
            if gz_public.isElementPresent(driver=master, by="id",
                                          value="com.glazero.android:id/inner_layout_ota_prompt") is True:
                master.find_element_by_xpath('//android.widget.Button[@text="忽略此版本"]').click()
                master.implicitly_wait(10)
            """
            # time.sleep(3)
    
            # 关闭云存广告弹窗
            (el := is_element_present(master, AppiumBy.ID, ANDROID_AD_CLOSE_REID)) and el.click()
            logger.info("进入首页后开始断言：导航按钮、+、设备、云存储、在线客服")
    
            # 断言首页元素
            assert master.current_activity in (".main.MainActivity", ".account.login.LoginActivity")
            assert is_element_present(master, AppiumBy.ID, ANDROID_MENU_REID) is not None, \
                "首页左上角的导航按钮没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_ADD_REID) is not None, \
                "首页右上角的+号没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_DEVICES_REID) is not None, \
                "首页底部 ‘设备’标签 没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_CLOUD_REID) is not None, \
                "首页底部 ‘云存储’标签 没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_ONLINE_SUPPORT_REID) is not None, \
                "首页底部 ‘在线客服’标签 没有出现"
    
            # 首次登录设备列表加载较慢
            assert element_until_appears(master, AppiumBy.ID, 'com.glazero.android:id/device_name', 5).text == login_data['assert_region_name'], "大区没有出现"
            logger.info("进入首页成功，对应大区在首页检测到了")
    
>       test_logout(appium_service, android_driver)

test_login_and_logout.py:325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

appium_service = <appium.webdriver.appium_service.AppiumService object at 0x105237290>
android_driver = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>

    @pytest.mark.logout
    @pytest.mark.android
    def test_logout(appium_service, android_driver):
        driver = android_driver
    
        with allure.step('step1: 点击左上角 导航 按钮'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_MENU_REID)
            el.click()
    
            driver.implicitly_wait(5)
    
            assert is_element_present(driver, AppiumBy.ID, ANDROID_PERSONAL_ICON_REID) is not None
            logger.info("logout: 点击左上角 导航 按钮")
    
        with allure.step('step2: 点击 退出登录'):
            swipe_once_in_menu(driver)
            el = driver.find_element(by=AppiumBy.ANDROID_UIAUTOMATOR,
                                     value='new UiSelector().resourceId("com.glazero.android:id/tv_menu_item_name").text("退出登录")')
            # el = driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
            #                          f'new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().text({ANDROID_LOGOUT_TEXT}))')
            # sleep(1)
            el.click()
    
            driver.implicitly_wait(5)
            logger.info("logout: 点击 退出登录")
    
        with allure.step('step3: 点击 确定'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_CONFIRM_REID)
            el.click()
    
            logger.info("logout: 点击确定")
    
            # 点击确定后app会清理堆栈，之后再切换到登录页面
            sleep(2)
    
            # 断言回到登录页面
            assert driver.find_element(by=AppiumBy.ID, value=ANDROID_LOGIN_REID).text == '登录'
            logger.info("logout: 回到了登录页面")
    
        with allure.step('step4: 点击右上角的 X'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_LOGIN_CLOSE_REID)
            el.click()
    
>           assert is_element_present(driver, AppiumBy.ID, value=ANDROID_SPLASH_REID) is not None, \
                "没有回到启动页面"
E           AssertionError: 没有回到启动页面
E           assert None is not None
E            +  where None = is_element_present(<appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>, 'id', value='com.glazero.android:id/splash_create_account')
E            +    where 'id' = AppiumBy.ID

test_login_and_logout.py:371: AssertionError
------------------------------ Captured log call -------------------------------
2025-01-09 00:44:33 INFO conftest pytest_runtest_call 172  当前是第 343 次执行
2025-01-09 00:44:46 INFO gz_public region_search_for_android 245  gz_public::region_search_for_android国家名字是：中国
2025-01-09 00:44:48 INFO gz_public region_search_for_android 254  gz_public::region_search_for_android country_code是：中国  +86
2025-01-09 00:45:02 INFO test_login_and_logout test_login_change_region 306  进入首页后开始断言：导航按钮、+、设备、云存储、在线客服
2025-01-09 00:45:03 INFO test_login_and_logout test_login_change_region 323  进入首页成功，对应大区在首页检测到了
2025-01-09 00:45:04 INFO test_login_and_logout test_logout 340  logout: 点击左上角 导航 按钮
2025-01-09 00:45:08 INFO test_login_and_logout test_logout 352  logout: 点击 退出登录
2025-01-09 00:45:08 INFO test_login_and_logout test_logout 358  logout: 点击确定
2025-01-09 00:45:10 INFO test_login_and_logout test_logout 365  logout: 回到了登录页面
_______________________ test_login_change_region[eu124] ________________________

appium_service = <appium.webdriver.appium_service.AppiumService object at 0x105237290>
android_driver = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>
init_logout_android = None
login_data = {'assert_region_name': '欧洲', 'country_predicate': 'name == "   德国  +49" AND visible == true', 'email': 'aosu20230306@163.com', 'password': 'Qwe111111', ...}

    @allure.story('输入用户名和密码登录aosu app')
    @pytest.mark.android
    @pytest.mark.parametrize("login_data", ['cn_test', 'us', 'eu'] * 200, indirect=True)
    def test_login_change_region(appium_service, android_driver, init_logout_android, login_data):
        master = android_driver
    
        # 获取登录数据
        # login_data = LOGIN_DATA.get('cn_test').copy()
    
        # 点击 aosu 图标7次，在地区列表中出现中国
        x = master.get_window_size()['width']
        y = master.get_window_size()['height']
    
        xx = x//2
        yy = y//2
    
        for ii in range(1, 8):
            master.tap([(xx, yy)], 500)
            master.implicitly_wait(1)
    
        with allure.step('step1：在splash页，点击 登录 按钮'):
            master.find_element(AppiumBy.ID, "com.glazero.android:id/splash_login").click()
            master.implicitly_wait(10)
    
            # 断言进入了登录页面
            assert master.find_element(AppiumBy.ID, "com.glazero.android:id/tv_title").text == "登录"
    
        with allure.step('step2：输入用户名'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].send_keys(login_data['email'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step3: 输入密码'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].send_keys(login_data['password'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step4：选择地区'):
            region_country = login_data['region_name'].strip().split()[0]
            # 如果默认是指定的地区，那么就直接点击登录
            if master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].text[:2] == region_country:
                time.sleep(1)
            else:
                # 如果默认不是指定的地区，那么就在地区列表中选择
                # 在回归用例中不能直接点击登录按钮，要走一遍地区选择过程
                master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].click()
                master.implicitly_wait(10)
    
                region_search_for_android(master, login_data['region_name'])
    
                time.sleep(1)
    
        with allure.step('step5：点击 登录 按钮'):
            # 点击登录按钮之前截图
            ts = time.strftime("%Y-%m-%d_%H-%M-%S", time.localtime())
            master.save_screenshot('./report/login_and_logout/login_%s.png' % ts)
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/login_%s.png" % ts, name="登录页面",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            master.implicitly_wait(10)
    
        with (allure.step('step6: 登录成功')):
            # 点击登录按钮之后即进入首页后截图截图
            time.sleep(5)
            master.save_screenshot('./report/login_and_logout/homePage.png')
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/homePage.png", name="登陆成功 进入首页",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            # 登录后进入首页，有可能会弹出低电量的弹窗，发现后点击“知道了”关闭弹窗
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/btn_dialog_confirm") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/btn_dialog_confirm").click()
            #     master.implicitly_wait(10)
    
            # 出现固件升级弹窗后，点击 取消/忽略此版本，多个弹窗的话，点击多次
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/inner_layout_ota_prompt") is True:
            #     master.find_elements(AppiumBy.ID, "com.glazero.android:id/button")[1].click()
            #     master.implicitly_wait(10)
    
            # 如果出现智能提醒，点击：知道了
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/smart_warn_iv_top_icon") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            #     master.implicitly_wait(10)
    
            # 如果出现了新人礼的弹窗，点击关闭按钮
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/img_ad") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/iv_close").click()
            #     master.implicitly_wait(10)
    
            """
            if gz_public.isElementPresent(driver=master, by="id",
                                          value="com.glazero.android:id/inner_layout_ota_prompt") is True:
                master.find_element_by_xpath('//android.widget.Button[@text="忽略此版本"]').click()
                master.implicitly_wait(10)
            """
            # time.sleep(3)
    
            # 关闭云存广告弹窗
            (el := is_element_present(master, AppiumBy.ID, ANDROID_AD_CLOSE_REID)) and el.click()
            logger.info("进入首页后开始断言：导航按钮、+、设备、云存储、在线客服")
    
            # 断言首页元素
>           assert master.current_activity in (".main.MainActivity", ".account.login.LoginActivity")
E           assert 'com.glazero.module.account.login.LoginActivity' in ('.main.MainActivity', '.account.login.LoginActivity')
E            +  where 'com.glazero.module.account.login.LoginActivity' = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>.current_activity

test_login_and_logout.py:309: AssertionError
------------------------------ Captured log call -------------------------------
2025-01-09 01:12:48 INFO conftest pytest_runtest_call 172  当前是第 375 次执行
2025-01-09 01:13:02 INFO gz_public region_search_for_android 245  gz_public::region_search_for_android国家名字是：德国
2025-01-09 01:13:03 INFO gz_public region_search_for_android 254  gz_public::region_search_for_android country_code是：德国  +49
2025-01-09 01:13:27 INFO test_login_and_logout test_login_change_region 306  进入首页后开始断言：导航按钮、+、设备、云存储、在线客服
_______________________ test_login_change_region[eu183] ________________________

appium_service = <appium.webdriver.appium_service.AppiumService object at 0x105237290>
android_driver = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>
init_logout_android = None
login_data = {'assert_region_name': '欧洲', 'country_predicate': 'name == "   德国  +49" AND visible == true', 'email': 'aosu20230306@163.com', 'password': 'Qwe111111', ...}

    @allure.story('输入用户名和密码登录aosu app')
    @pytest.mark.android
    @pytest.mark.parametrize("login_data", ['cn_test', 'us', 'eu'] * 200, indirect=True)
    def test_login_change_region(appium_service, android_driver, init_logout_android, login_data):
        master = android_driver
    
        # 获取登录数据
        # login_data = LOGIN_DATA.get('cn_test').copy()
    
        # 点击 aosu 图标7次，在地区列表中出现中国
        x = master.get_window_size()['width']
        y = master.get_window_size()['height']
    
        xx = x//2
        yy = y//2
    
        for ii in range(1, 8):
            master.tap([(xx, yy)], 500)
            master.implicitly_wait(1)
    
        with allure.step('step1：在splash页，点击 登录 按钮'):
            master.find_element(AppiumBy.ID, "com.glazero.android:id/splash_login").click()
            master.implicitly_wait(10)
    
            # 断言进入了登录页面
            assert master.find_element(AppiumBy.ID, "com.glazero.android:id/tv_title").text == "登录"
    
        with allure.step('step2：输入用户名'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[0].send_keys(login_data['email'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step3: 输入密码'):
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].clear()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].click()
            master.implicitly_wait(10)
            master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[1].send_keys(login_data['password'])
    
            # 输入完成后隐藏键盘
            master.hide_keyboard()
    
        with allure.step('step4：选择地区'):
            region_country = login_data['region_name'].strip().split()[0]
            # 如果默认是指定的地区，那么就直接点击登录
            if master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].text[:2] == region_country:
                time.sleep(1)
            else:
                # 如果默认不是指定的地区，那么就在地区列表中选择
                # 在回归用例中不能直接点击登录按钮，要走一遍地区选择过程
                master.find_elements(AppiumBy.ID, "com.glazero.android:id/edit_text")[2].click()
                master.implicitly_wait(10)
    
                region_search_for_android(master, login_data['region_name'])
    
                time.sleep(1)
    
        with allure.step('step5：点击 登录 按钮'):
            # 点击登录按钮之前截图
            ts = time.strftime("%Y-%m-%d_%H-%M-%S", time.localtime())
            master.save_screenshot('./report/login_and_logout/login_%s.png' % ts)
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/login_%s.png" % ts, name="登录页面",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            master.implicitly_wait(10)
    
        with (allure.step('step6: 登录成功')):
            # 点击登录按钮之后即进入首页后截图截图
            time.sleep(5)
            master.save_screenshot('./report/login_and_logout/homePage.png')
            time.sleep(3)
    
            allure.attach.file("./report/login_and_logout/homePage.png", name="登陆成功 进入首页",
                               attachment_type=allure.attachment_type.JPG)
            master.implicitly_wait(10)
    
            # 登录后进入首页，有可能会弹出低电量的弹窗，发现后点击“知道了”关闭弹窗
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/btn_dialog_confirm") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/btn_dialog_confirm").click()
            #     master.implicitly_wait(10)
    
            # 出现固件升级弹窗后，点击 取消/忽略此版本，多个弹窗的话，点击多次
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/inner_layout_ota_prompt") is True:
            #     master.find_elements(AppiumBy.ID, "com.glazero.android:id/button")[1].click()
            #     master.implicitly_wait(10)
    
            # 如果出现智能提醒，点击：知道了
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/smart_warn_iv_top_icon") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/button").click()
            #     master.implicitly_wait(10)
    
            # 如果出现了新人礼的弹窗，点击关闭按钮
            # while gz_public.isElementPresent(driver=master, by="id",
            #                                  value="com.glazero.android:id/img_ad") is True:
            #     master.find_element(AppiumBy.ID, "com.glazero.android:id/iv_close").click()
            #     master.implicitly_wait(10)
    
            """
            if gz_public.isElementPresent(driver=master, by="id",
                                          value="com.glazero.android:id/inner_layout_ota_prompt") is True:
                master.find_element_by_xpath('//android.widget.Button[@text="忽略此版本"]').click()
                master.implicitly_wait(10)
            """
            # time.sleep(3)
    
            # 关闭云存广告弹窗
            (el := is_element_present(master, AppiumBy.ID, ANDROID_AD_CLOSE_REID)) and el.click()
            logger.info("进入首页后开始断言：导航按钮、+、设备、云存储、在线客服")
    
            # 断言首页元素
            assert master.current_activity in (".main.MainActivity", ".account.login.LoginActivity")
            assert is_element_present(master, AppiumBy.ID, ANDROID_MENU_REID) is not None, \
                "首页左上角的导航按钮没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_ADD_REID) is not None, \
                "首页右上角的+号没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_DEVICES_REID) is not None, \
                "首页底部 ‘设备’标签 没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_CLOUD_REID) is not None, \
                "首页底部 ‘云存储’标签 没有出现"
            assert is_element_present(master, AppiumBy.ID, ANDROID_ONLINE_SUPPORT_REID) is not None, \
                "首页底部 ‘在线客服’标签 没有出现"
    
            # 首次登录设备列表加载较慢
            assert element_until_appears(master, AppiumBy.ID, 'com.glazero.android:id/device_name', 5).text == login_data['assert_region_name'], "大区没有出现"
            logger.info("进入首页成功，对应大区在首页检测到了")
    
>       test_logout(appium_service, android_driver)

test_login_and_logout.py:325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

appium_service = <appium.webdriver.appium_service.AppiumService object at 0x105237290>
android_driver = <appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>

    @pytest.mark.logout
    @pytest.mark.android
    def test_logout(appium_service, android_driver):
        driver = android_driver
    
        with allure.step('step1: 点击左上角 导航 按钮'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_MENU_REID)
            el.click()
    
            driver.implicitly_wait(5)
    
            assert is_element_present(driver, AppiumBy.ID, ANDROID_PERSONAL_ICON_REID) is not None
            logger.info("logout: 点击左上角 导航 按钮")
    
        with allure.step('step2: 点击 退出登录'):
            swipe_once_in_menu(driver)
            el = driver.find_element(by=AppiumBy.ANDROID_UIAUTOMATOR,
                                     value='new UiSelector().resourceId("com.glazero.android:id/tv_menu_item_name").text("退出登录")')
            # el = driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR,
            #                          f'new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().text({ANDROID_LOGOUT_TEXT}))')
            # sleep(1)
            el.click()
    
            driver.implicitly_wait(5)
            logger.info("logout: 点击 退出登录")
    
        with allure.step('step3: 点击 确定'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_CONFIRM_REID)
            el.click()
    
            logger.info("logout: 点击确定")
    
            # 点击确定后app会清理堆栈，之后再切换到登录页面
            sleep(2)
    
            # 断言回到登录页面
            assert driver.find_element(by=AppiumBy.ID, value=ANDROID_LOGIN_REID).text == '登录'
            logger.info("logout: 回到了登录页面")
    
        with allure.step('step4: 点击右上角的 X'):
            el = driver.find_element(by=AppiumBy.ID, value=ANDROID_LOGIN_CLOSE_REID)
            el.click()
    
>           assert is_element_present(driver, AppiumBy.ID, value=ANDROID_SPLASH_REID) is not None, \
                "没有回到启动页面"
E           AssertionError: 没有回到启动页面
E           assert None is not None
E            +  where None = is_element_present(<appium.webdriver.webdriver.WebDriver (session="a6ecc28f-cb4e-4c5e-92df-46fe5be84b14")>, 'id', value='com.glazero.android:id/splash_create_account')
E            +    where 'id' = AppiumBy.ID

test_login_and_logout.py:371: AssertionError
------------------------------ Captured log call -------------------------------
2025-01-09 03:50:08 INFO conftest pytest_runtest_call 172  当前是第 552 次执行
2025-01-09 03:50:22 INFO gz_public region_search_for_android 245  gz_public::region_search_for_android国家名字是：德国
2025-01-09 03:50:23 INFO gz_public region_search_for_android 254  gz_public::region_search_for_android country_code是：德国  +49
2025-01-09 03:50:48 INFO test_login_and_logout test_login_change_region 306  进入首页后开始断言：导航按钮、+、设备、云存储、在线客服
2025-01-09 03:50:48 INFO test_login_and_logout test_login_change_region 323  进入首页成功，对应大区在首页检测到了
2025-01-09 03:50:50 INFO test_login_and_logout test_logout 340  logout: 点击左上角 导航 按钮
2025-01-09 03:50:53 INFO test_login_and_logout test_logout 352  logout: 点击 退出登录
2025-01-09 03:50:54 INFO test_login_and_logout test_logout 358  logout: 点击确定
2025-01-09 03:50:56 INFO test_login_and_logout test_logout 365  logout: 回到了登录页面
=========================== short test summary info ============================
FAILED test_login_and_logout.py::test_login_change_region[us57] - AssertionEr...
FAILED test_login_and_logout.py::test_login_change_region[cn_test114] - Asser...
FAILED test_login_and_logout.py::test_login_change_region[eu124] - assert 'co...
FAILED test_login_and_logout.py::test_login_change_region[eu183] - AssertionE...
4 failed, 596 passed in 30305.06s (8:25:05)
